
import java.util.ArrayList;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Processo;
import util.Temp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jeison.marques
 */
public class ProcessamentoUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProcessamentoUI
     */
    private Timer timer;
    private ArrayList<Processo> listRun = new ArrayList();
    
    public ProcessamentoUI() {
        initComponents();
        timer = new Timer();
    
     timer.scheduleAtFixedRate(new TimerTask() {
     public void run() {

            try {
                
                VerificaProcessoNovo();
                ProcessoFifo();
            } catch (InterruptedException ex) {
                Logger.getLogger(ProcessamentoUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Date d = new Date();
            System.out.println("Processando as " + d.toString());
            System.out.println("Lista de Processamento: "+listRun.size());
            System.out.println("Lista de Processos: "+Temp.list.size());
            }
        }, 0, 1000);
    }
    
    public void ProcessoFifo() throws InterruptedException
    {
        if(listRun.size() > 0)
        {
            
            Processo proc = listRun.get(0);
            Processo procTemp = Temp.ReturnaProcessoPorPid(proc.getPid());
            boolean Finalizar = TrocaEstado(procTemp, "Execucao");      
            listRun.remove(0);
                      

            System.out.println(proc.toString());
            if("CPU-Bound".equals(proc.getTipo()))
            {
                Thread.sleep(700);
                proc.setProcessado(true);
            }
            if("I/O-Bound(Disco)".equals(proc.getTipo()))
            {
                Thread.sleep(500);
                proc.setProcessado(false);
            }
            if("I/O-Bound(Fita)".equals(proc.getTipo()))
            {
                Thread.sleep(500);
                proc.setProcessado(false);
            }
            
            Finalizar = TrocaEstado(proc, "Ponto");
            System.out.println(proc.toString());
            
            if(!Finalizar)
            {
                listRun.add(proc);
            }
            else
            {
                Temp.FinalizaProcesso(proc.getPid());
            }
            
        } 
    }
    public boolean TrocaEstado(Processo proc, String estato)
    {

        if("Finalizar".equals(proc.getEstado()))
        {
            Temp.AtualizaEstado(proc.getPid(), estato);
            return true;
        }
        else
        {
            Temp.AtualizaEstado(proc.getPid(), estato);
           return false; 
        } 
        
    }
    

    public void VerificaProcessoNovo()
    {
        if(Temp.list.size() != listRun.size() && Temp.list.size() > 0)
        {
            if(Temp.list.size() > listRun.size())
            {
                for (Processo proc : Temp.list) {
                    if("N/A".equals(proc.getEstado()))
                    {
                        listRun.add(proc);
                        Temp.AtualizaEstado(proc.getPid(), "Ponto");
                    }
                }
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
